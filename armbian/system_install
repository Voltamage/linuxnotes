#!/bin/bash
bold=$(tput bold)
normal=$(tput sgr0)

echo "${bold}[UPDATING)]${normal}"
echo "${bold}[Updating SOURCES (Adding docker)]${normal}"
sudo apt-get -y install apt-transport-https ca-certificates gnupg2 software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
sudo add-apt-repository "deb [arch=armhf] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
sudo sed -i -e '/deb-src/d' -e '/^$/d' /etc/apt/sources.list
sudo apt-get update

echo "${bold}[INSTALLING]${normal}"
echo "${bold}[Installing PACKAGES]${normal}"
sudo apt-get -y acl aria2 armbian-config docker-ce docker-ce-cli docker-compose file glusterfs-server hdparm htop iotop lvm2 man-db mediainfo ncdu needrestart neofetch nload nmap python ranger rpcbind rsync smartmontools sshfs tmux vim xfsprogs
echo "${bold}[Installing SCRIPTS]${normal}"
echo "${bold}[Installing fnd]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/fnd > ~/scripts/fnd -#
sudo chmod u+x ~/scripts/fnd
echo "${bold}[Installing maintain]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/maintain > ~/scripts/maintain -#
sudo chmod u+x ~/scripts/maintain
echo "${bold}[Installing mfnd]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/mfnd > ~/scripts/mfnd -#
sudo chmod u+x ~/scripts/mfnd
echo "${bold}[Installing msrsync]${normal}"
curl https://raw.githubusercontent.com/jbd/msrsync/master/msrsync > ~/scripts/msrsync -#
sudo chmod u+x ~/scripts/msrsync
echo "${bold}[Installing rmshit.py]${normal}"
curl https://raw.githubusercontent.com/lahwaacz/Scripts/master/rmshit.py > ~/scripts/rmshit.py -#
sed -i '/.viminfo/d' ~/scripts/rmshit.py
sudo chmod u+x ~/scripts/rmshit.py
echo "${bold}[Installing update]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/update > ~/scripts/update -#
sudo chmod u+x ~/scripts/update
echo "${bold}[Installing ALIASES]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/.oh-my-zsh/custom/aliases.zsh > ~/.oh-my-zsh/custom/aliases.zsh -#

echo "${bold}[CONFIGURING]${normal}"
echo "${bold}[Configuring TIMEZONE]${normal}"
sudo timedatectl set-timezone America/Los_Angeles
timedatectl set-ntp true
echo "${bold}[Configuring DISK SHUTDOWN]${normal}"
curl https://dn.odroid.com/5422/script/odroid.shutdown > /tmp/odroid.shutdown -#
sudo install -o root -g root -m 0755 /tmp/odroid.shutdown /lib/systemd/system-shutdown/odroid.shutdown
rm /tmp/odroid.shutdown
echo "${bold}[Configuring GLUSTERD SERVICE]${normal}"
sudo systemctl enable --now glusterd
echo "${bold}[Configuring PACKAGES]${normal}"
echo "${bold}[Configuring aria2]${normal}"
mkdir ~/.config/aria2
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/.config/aria2/aria2.conf > ~/.config/aria2/aria2.conf -#
echo "${bold}[Configuring htop]${normal}"
sudo rm -rf /root/.config/htop
sed -i -e '/tree_view/c\tree_view=1' ~/.config/htop/htoprc
echo "${bold}[Configuring neofetch]${normal}"
mkdir ~/.config/neofetch
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/.config/neofetch/config.conf > ~/.config/neofetch/config.conf -#
echo "${bold}[Configuring vim]${normal}"
echo "SELECTED_EDITOR="/usr/bin/vim.basic"" > ~/.selected_editor
sudo cp ~/.selected_editor /root
echo "${bold}[Configuring .pkglist]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/tmp/packages -# >> ~/.zsh_history
comm -12 <(grep 'sudo apt-get install' ~/.zsh_history | sed '/|/d' | awk '{$1=$2=$3=$4=""; print $0}' | sed s/\\s/\\n/g | sort -n) <(dpkg --list | awk '{print $2}' | sed 's/:amd64//' | sort -n) | sed '/^$/d' > ~/.pkglist

echo "${bold}[GLUSTERFS]${normal}"
echo "${bold}[Formatting filesystem]${normal}"
dd if=/dev/zero of=/dev/sda bs=512 count=1
sudo pvcreate /dev/sda
sudo vgcreate vg_glusterfs /dev/sda
sudo lvcreate --thin vg_glusterfs/oceanus_brick --extents 100%FREE --poolmetadatasize 16GB --zero n
sudo mkfs.xfs -f -i size=512 -n size=8192 /dev/vg_glusterfs/oceanus_brick
echo "${bold}[Mounting filesystem]${normal}"
sudo mkdir /mnt/oceanus
sudo cp /etc/fstab /etc/fstab.bak
cp /etc/fstab /tmp/fstab
echo "/dev/vg_glusterfs/oceanus_brick /mnt/oceanus xfs rw,inode64,noatime,nouuid 0 2" >> /tmp/fstab
sudo mv /tmp/fstab /etc/fstab
sudo mount -av

echo "${bold}[REVIEW]${normal}"
echo "${bold}[Review sources]${normal}"
cat /etc/apt/sources.list /etc/apt/sources.list.d/*.list
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review timezone]${normal}"
timedatectl
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review locale]${normal}"
locale -a
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review disk shutdown]${normal}"
less /lib/systemd/system-shutdown/odroid.shutdown
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review critical services]${normal}"
systemctl --type=service | grep 'docker\|rpcbind\|glusterd' | grep running
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review fstab]${normal}"
cat /etc/fstab
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review aria2]${normal}"
cat ~/.config/aria2/aria2.conf
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review htop]${normal}"
echo "[Root]"
sudo cat /root/.config/htop/htoprc | grep tree_view
echo "[User]"
cat ~/.config/htop/htoprc | grep tree_view
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review neofetch]${normal}"
neofetch
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review vim]${normal}"
echo "[Root]"
sudo cat /root/.selected_editor
echo "[User]"
cat ~/.selected_editor
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review aliases]${normal}"
cat ~/.oh-my-zsh/custom/aliases.zsh
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review .pkglist]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
less ~/.pkglist
echo "${bold}[Review filesystem]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[user folder]") <(ls -la ~/) <(echo "") <(echo "[scripts folder]") <(ls -la ~/scripts) <(echo "") <(echo "[root folder]") <(sudo ls -la /root) <(echo "") <(echo "[tmp folder]") <(ls -la /tmp) <(echo "") | less
echo "${bold}[Review LVM]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[Physical volumes]") <(sudo pvdisplay) <(echo "[Volume groups]") <(sudo vgdisplay) <(echo "[Logical volumes]") <(sudo lvdisplay) <(echo "[Metadata]") <(sudo lvs -o+metadata_percent) | less

echo "${bold}[DONE]${normal}"
exec zsh
