sudo apt-get install mediainfo ncdu
set vim.basic as editor for root as well
in vm options, set start at boot

sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
sudo apt-get install docker-ce docker-ce-cli
sudo docker run hello-world

sudo docker volume create portainer_config
sudo docker run -d \
--name portainer \
-p 9000:9000 \
--restart unless-stopped \
-v /var/run/docker.sock:/var/run/docker.sock \
-v portainer_config:/data \
portainer/portainer

sudo docker info
sudo docker images
sudo docker ps
portainer set admin
manage local environment

sudo docker volume create plex_config
sudo docker volume create plex_transcode
sudo docker run -d \
--name plex \
--restart unless-stopped \
--network=host \
-e TZ=America/Los_Angeles \
-e PLEX_CLAIM= \
-e PLEX_UID=1000 \
-e PLEX_GID=1000 \
-v plex_config:/config \
-v plex_transcode:/transcode \
-v /mnt/oceanus/media/Plex:/data \
plexinc/pms-docker

sudo docker volume create tautulli_config
sudo docker run -d \
--name tautulli \
-p 8181:8181 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-e PUID=1000 \
-e PGID=1000 \
-v tautulli_config:/config \
tautulli/tautulli

sudo docker run -d \
--name watchtower \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-v /var/run/docker.sock:/var/run/docker.sock \
containrrr/watchtower --cleanup --debug
SETUP CRON SCHEDULING AND NOTIFICATIONS

sudo docker volume create grafana_data
sudo docker run -d \
--name grafana \
-p 3000:3000 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-v grafana_data:/var/lib/grafana \
grafana/grafana

sudo docker run -d \
--name glances \
-p 61208:61208 \
--restart unless-stopped \
-e GLANCES_OPT="-w" \
-v /var/run/docker.sock:/var/run/docker.sock:ro \
--pid host \
docker.io/nicolargo/glances

sudo docker volume create transmission_config

sudo docker run --cap-add=NET_ADMIN -d \
--name transmission \
-v transmission_config:/config \
-v /mnt/oceanus/downloads/torrents/:/data \
-v /etc/localtime:/etc/localtime:ro \
-p 9091:9091 \
--dns 8.8.8.8 \
--dns 8.8.4.4 \
--sysctl net.ipv6.conf.all.disable_ipv6=0 \
--restart always \
--log-driver json-file \
--log-opt max-size=10m \
-e CREATE_TUN_DEVICE=true \
-e OPENVPN_PROVIDER=MULLVAD \
-e OPENVPN_CONFIG=mullvad_us-ca_udp \
-e OPENVPN_USERNAME= \
-e OPENVPN_PASSWORD= \
-e OPENVPN_OPTS="--inactive 3600 --ping 10 --ping-exit 60" \
-e WEBPROXY_ENABLED=false \
-e LOCAL_NETWORK=192.168.2.0/24 \
-e TRANSMISSION_HOME=/config \
-e TRANSMISSION_WEB_UI=transmission-web-control \
-e TRANSMISSION_ENCRYPTION=2 \
-e TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false \
-e TRANSMISSION_RATIO_LIMIT_ENABLED=true \
-e TRANSMISSION_RATIO_LIMIT=0 \
-e TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=false \
-e TRANSMISSION_QUEUE_STALLED_ENABLED=false \
-e TRANSMISSION_PEER_LIMIT_GLOBAL=500 \
-e TRANSMISSION_PEER_LIMIT_PER_TORRENT=250 \
-e TRANSMISSION_WATCH_DIR_ENABLED=true \
-e TRANSMISSION_WATCH_DIR=/data/.blackhole \
-e TRANSMISSION_ALT_SPEED_DOWN=8000 \
-e TRANSMISSION_ALT_SPEED_UP=1500 \
-e PUID=1000 \
-e PGID=1000 \
haugene/transmission-openvpn

metro theme
refresh every 3 seconds
remove: ratio, complete size, trackers, download dir, and user labels from the display

sudo docker volume create jackett_config
sudo docker run -d \
--name jackett \
-p 9117:9117 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-e PUID=1000 \
-e PGID=1000 \
-v jackett_config:/config \
-v /mnt/oceanus/downloads/torrents/.blackhole:/downloads \
linuxserver/jackett

disable automatic updates to prevent crashing
add all english public sources
test all and remove dead sources

sudo docker volume create sonarr_config
sudo docker run -d \
--name sonarr \
-p 8989:8989 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-e PUID=1000 \
-e PGID=1000 \
-v sonarr_config:/config \
-v "/mnt/oceanus/media/Plex/TV Shows":/tv \
-v /mnt/oceanus/downloads/torrents/completed:/downloads \
linuxserver/sonarr:preview

sudo docker volume create radarr_config
sudo docker run -d \
--name radarr \
-p 7878:7878 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-e PUID=1000 \
-e PGID=1000 \
-v radarr_config:/config \
-v /mnt/oceanus/media/Plex/Movies:/movies \
-v /mnt/oceanus/downloads/torrents/completed:/downloads \
linuxserver/radarr


sudo docker volume create lidarr_config
sudo docker run -d \
--name lidarr \
-p 8686:8686 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-e PUID=1000 \
-e PGID=1000 \
-v lidarr_config:/config \
-v /mnt/oceanus/media/Plex/Music:/music \
-v /mnt/oceanus/downloads/torrents/completed:/downloads \
linuxserver/lidarr

set download client, name it itself, set ip address, and set category name to the service

sudo docker volume create heimdall_config
sudo docker run -d \
--name=heimdall \
-p 443:443 \
--restart unless-stopped \
-e TZ=America/Los_Angeles \
-e PUID=1000 \
-e PGID=1000 \
-v heimdall_config:/config \
linuxserver/heimdall
