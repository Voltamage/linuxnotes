XORG
    yay -S xorg-server xorg-xinit
    
NVIDIA
check what driver is running
    lspci -k | grep -A 2 -E "(VGA|3D)"
    
lib32 stuff is for steam
    yay -S nvidia nvidia-utils lib32-nvidia-utils nvidia-settings
    reboot
    
double check that it worked
    lspci -k | grep -A 2 -E "(VGA|3D)"
    
WM SETUP
    yay -S termite
    yay -S rofi
    yay -S bspwm sxhkd
    mkdir -p ~/.config/bspwm
    mkdir ~/.config/sxhkd
    cp /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm
    cp /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/sxhkd
    
switch out emulator and launcher
    nano -w ~/.config/sxhkdrc
        # terminal emulator
        super + Return
            termite
        
        # program launcher
        super + @space
            rofi -show run
            
FONTS
    yay -S noto-fonts noto-fonts-emoji noto-fonts-cjk
    
XINITRC
extra stuff for compton if you decided to install the compton-tryone-git instead of the community version
    nano -w ~/.xinitrc
        compton --backend glx --blur-method kawase  --blur-background --blur-strength 8 &
        sxhkd &
        exec bspwm
        
ENTER THE SYSTEM
    startx
    
CONFIGURE DISPLAY
use nvidia-settings, change monitor configuration, save configuration as xorg.conf
    sudo mv ~/xorg.conf /etc/X11/xorg.conf.d/xorg.conf
    
SELECT THE MIRRORS
    pacman -S reflector
    cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
    sudo reflector --verbose --country 'United States' --protocol https --sort rate --save /etc/pacman.d/mirrorlist
    nano -w /etc/pacman.d/mirrorlist
    nano -w /etc/systemd/system/reflector.service
        [Unit]
        Description=pacman mirrorlist update
        Wants=network-online.target
        After=network-online.target
        
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/reflector --country 'United States' --protocol https --sort rate --save /etc/pacman.d/mirrorlist
        
        [Install]
        RequiredBy=multi-user.target
        
start the service with
    systemctl enable reflector.service
    
